(()=>{"use strict";class e{static patchChildren(e,t,s){e.childNodes.forEach(((e,c)=>{this.patchNode(e,t[c],s[c])})),s.slice(t.length).forEach((t=>{e.appendChild(this.createDOMNode(t))}))}static patchProp(e,t,s,c){if(null!=c&&!1!==c){if(t.startsWith("on")){const r=t.slice(2);return e[r]=c,console.log(e,t,s,c),void(c?s||e.addEventListener(r,this.#e):e.removeEventListener(r,this.#e))}e.setAttribute(t,c)}else e.removeAttribute(t)}static patchProps(e,t,s){const c={...t,...s};Object.keys(c).forEach((c=>{t[c]!==s[c]&&this.patchProp(e,c,t[c],s[c])}))}static patchNode(e,t,s){if(void 0!==s){if("string"==typeof t||"string"==typeof s){if(t!==s){const t=this.createDOMNode(s);return e.replaceWith(t),t}return e}if(t.tagName!==s.tagName){const t=this.createDOMNode(s);return e.replaceWith(t),t}return this.patchProps(e,t.props,s.props),this.patchChildren(e,t.children,s.children),e}e.remove()}static createDOMNode(e){if("string"==typeof e)return document.createTextNode(e);const{tagName:t,props:s,children:c}=e,r=document.createElement(t);return this.patchProps(r,{},s),c.forEach((e=>{r.appendChild(this.createDOMNode(e))})),r}static createVNode(e,t={},s=[]){return{tagName:e,props:t,children:s}}static mount(e,t){return t.replaceWith(e),e}static patch(e,t){console.log("PATCH");const s=t.v||this.#t(t);return(t=this.patchNode(t,s,e)).v=e,t}static#t(e){if(3===e.nodeType)return e.nodeValue;const t=e.nodeName.toLowerCase(),s=[].map.call(e.childNodes,this.#t);return this.createVNode(t,{},s)}static#e(e){return this[e.type](e)}}class t{constructor(){this.state={selectedRow:0,rows:["Start","Options"]}}onStateChanged(){e.patch(this.createVApp(store),app)}createVApp(){const{selectedRow:t,rows:s}=this.state,c=s.map(((s,c)=>{const r=c===t?"menu__item menu__item_selected":"menu__item";return e.createVNode("p",{class:r,onclick:e=>{switch(console.log("EVENT: ",e),e.key){case"ArrowUp":case"ArrowDown":this.setState("changeSelectedRow",c)}}},[s])}));return e.createVNode("div",{class:"menu"},c)}setState(e,t){"changeSelectedRow"===e&&(this.state.selectedRow=t,this.onStateChanged())}}Object.freeze({RIGHT:Symbol("RIGHT"),LEFT:Symbol("LEFT"),UP:Symbol("UP"),DOWN:Symbol("DOWN")});const s=Object.freeze({MENU:Symbol("MENU"),GAME:Symbol("GAME")});new class{constructor(){this.state=s.MENU,this[s.MENU]=new t;const c=this[this.state].createVApp();this.app=e.patch(c,document.getElementById("root"))}onStateChanged(){this[this.state].createVApp(),e.patch(createVApp(this.store),app)}setState(e){this.state=e,this.onStateChanged()}}})();